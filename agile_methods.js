var nodes = {};
var edges = {};
nodes['xp'] = { label: 'XP', mass: 3, origin: true, cssClass: 'method'};
nodes['agile_manifesto'] = { label: 'Agile Manifesto', mass: 3, origin: true, cssClass: 'method'};
nodes['agile_manifesto'] = { label: 'Agile Manifesto', mass: 3, origin: true, cssClass: 'method'};
nodes['scrum'] = { label: 'Scrum', mass: 3, origin: true, cssClass: 'method'};
nodes['scrum'] = { label: 'Scrum', mass: 3, origin: true, cssClass: 'method'};
nodes['lean'] = { label: 'Lean', mass: 3, origin: true, cssClass: 'method'};
nodes['getting_real'] = { label: 'Getting Real', mass: 3, origin: true, cssClass: 'method'};
nodes['holistic'] = { label: 'Holistic', mass: 2, cssClass: 'attr'};
edges['scrumholistic'] = { nodeA: 'scrum', nodeB: 'holistic', weight: 35}
edges['leanholistic'] = { nodeA: 'lean', nodeB: 'holistic', weight: 65}
nodes['overlapping_phases'] = { label: 'Overlapping Phases', mass: 2, cssClass: 'attr'};
edges['scrumoverlapping_phases'] = { nodeA: 'scrum', nodeB: 'overlapping_phases', weight: 40}
nodes['cross_functional_teams'] = { label: 'Cross-Functional Teams', mass: 2, cssClass: 'attr'};
edges['scrumcross_functional_teams'] = { nodeA: 'scrum', nodeB: 'cross_functional_teams', weight: 45}
nodes['practices'] = { label: 'Practices', mass: 2, cssClass: 'attr'};
edges['scrumpractices'] = { nodeA: 'scrum', nodeB: 'practices', weight: 50}
nodes['predefined_roles'] = { label: 'Predefined Roles', mass: 2, cssClass: 'attr'};
edges['scrumpredefined_roles'] = { nodeA: 'scrum', nodeB: 'predefined_roles', weight: 55}
nodes['iteration_sprint'] = { label: 'Iteration/Sprint', mass: 2, cssClass: 'attr'};
edges['scrumiteration_sprint'] = { nodeA: 'scrum', nodeB: 'iteration_sprint', weight: 60}
nodes['working_software'] = { label: 'Working Software', mass: 2, cssClass: 'attr'};
edges['agile_manifestoworking_software'] = { nodeA: 'agile_manifesto', nodeB: 'working_software', weight: 45}
edges['scrumworking_software'] = { nodeA: 'scrum', nodeB: 'working_software', weight: 65}
edges['leanworking_software'] = { nodeA: 'lean', nodeB: 'working_software', weight: 50}
nodes['backlog'] = { label: 'Backlog', mass: 2, cssClass: 'attr'};
edges['scrumbacklog'] = { nodeA: 'scrum', nodeB: 'backlog', weight: 70}
nodes['self_organizing'] = { label: 'Self-Organizing', mass: 2, cssClass: 'attr'};
edges['agile_manifestoself_organizing'] = { nodeA: 'agile_manifesto', nodeB: 'self_organizing', weight: 80}
edges['scrumself_organizing'] = { nodeA: 'scrum', nodeB: 'self_organizing', weight: 75}
edges['leanself_organizing'] = { nodeA: 'lean', nodeB: 'self_organizing', weight: 55}
nodes['respond_to_change'] = { label: 'Respond to Change', mass: 2, cssClass: 'attr'};
edges['agile_manifestorespond_to_change'] = { nodeA: 'agile_manifesto', nodeB: 'respond_to_change', weight: 40}
edges['scrumrespond_to_change'] = { nodeA: 'scrum', nodeB: 'respond_to_change', weight: 80}
nodes['customer_satisfaction'] = { label: 'Customer Satisfaction', mass: 2, cssClass: 'attr'};
edges['xpcustomer_satisfaction'] = { nodeA: 'xp', nodeB: 'customer_satisfaction', weight: 35}
edges['agile_manifestocustomer_satisfaction'] = { nodeA: 'agile_manifesto', nodeB: 'customer_satisfaction', weight: 35}
nodes['collaborate_with_customers'] = { label: 'Collaborate with Customers', mass: 2, cssClass: 'attr'};
edges['agile_manifestocollaborate_with_customers'] = { nodeA: 'agile_manifesto', nodeB: 'collaborate_with_customers', weight: 50}
nodes['individuals'] = { label: 'Individuals', mass: 2, cssClass: 'attr'};
edges['agile_manifestoindividuals'] = { nodeA: 'agile_manifesto', nodeB: 'individuals', weight: 55}
nodes['face_to_face_communication'] = { label: 'Face-to-face communication', mass: 2, cssClass: 'attr'};
edges['agile_manifestoface_to_face_communication'] = { nodeA: 'agile_manifesto', nodeB: 'face_to_face_communication', weight: 60}
nodes['working_software'] = { label: 'Working Software', mass: 2, cssClass: 'attr'};
edges['agile_manifestoworking_software'] = { nodeA: 'agile_manifesto', nodeB: 'working_software', weight: 65}
nodes['sustainable_development'] = { label: 'Sustainable Development', mass: 2, cssClass: 'attr'};
edges['agile_manifestosustainable_development'] = { nodeA: 'agile_manifesto', nodeB: 'sustainable_development', weight: 70}
nodes['technical_excellence'] = { label: 'Technical Excellence', mass: 2, cssClass: 'attr'};
edges['agile_manifestotechnical_excellence'] = { nodeA: 'agile_manifesto', nodeB: 'technical_excellence', weight: 75}
nodes['face_to_face_communication'] = { label: 'Face-to-face communication', mass: 2, cssClass: 'attr'};
edges['agile_manifestoface_to_face_communication'] = { nodeA: 'agile_manifesto', nodeB: 'face_to_face_communication', weight: 35}
nodes['individuals'] = { label: 'Individuals', mass: 2, cssClass: 'attr'};
edges['agile_manifestoindividuals'] = { nodeA: 'agile_manifesto', nodeB: 'individuals', weight: 35}
nodes['working_software'] = { label: 'Working Software', mass: 2, cssClass: 'attr'};
edges['agile_manifestoworking_software'] = { nodeA: 'agile_manifesto', nodeB: 'working_software', weight: 40}
nodes['collaborate_with_customers'] = { label: 'Collaborate with Customers', mass: 2, cssClass: 'attr'};
edges['agile_manifestocollaborate_with_customers'] = { nodeA: 'agile_manifesto', nodeB: 'collaborate_with_customers', weight: 45}
nodes['respond_to_change'] = { label: 'Respond to Change', mass: 2, cssClass: 'attr'};
edges['agile_manifestorespond_to_change'] = { nodeA: 'agile_manifesto', nodeB: 'respond_to_change', weight: 50}
nodes['working_software'] = { label: 'Working Software', mass: 2, cssClass: 'attr'};
edges['xpworking_software'] = { nodeA: 'xp', nodeB: 'working_software', weight: 40}
nodes['respond_to_change'] = { label: 'Respond to Change', mass: 2, cssClass: 'attr'};
edges['xprespond_to_change'] = { nodeA: 'xp', nodeB: 'respond_to_change', weight: 45}
nodes['teamwork'] = { label: 'Teamwork', mass: 2, cssClass: 'attr'};
edges['xpteamwork'] = { nodeA: 'xp', nodeB: 'teamwork', weight: 50}
nodes['equal_partners'] = { label: 'Equal Partners', mass: 2, cssClass: 'attr'};
edges['xpequal_partners'] = { nodeA: 'xp', nodeB: 'equal_partners', weight: 55}
nodes['collaborators'] = { label: 'Collaborators', mass: 2, cssClass: 'attr'};
edges['xpcollaborators'] = { nodeA: 'xp', nodeB: 'collaborators', weight: 60}
nodes['simple_environment'] = { label: 'Simple Environment', mass: 2, cssClass: 'attr'};
edges['xpsimple_environment'] = { nodeA: 'xp', nodeB: 'simple_environment', weight: 65}
nodes['high_productivity'] = { label: 'High Productivity', mass: 2, cssClass: 'attr'};
edges['xphigh_productivity'] = { nodeA: 'xp', nodeB: 'high_productivity', weight: 65}
nodes['self_organizing'] = { label: 'Self-Organizing', mass: 2, cssClass: 'attr'};
edges['xpself_organizing'] = { nodeA: 'xp', nodeB: 'self_organizing', weight: 70}
nodes['communication'] = { label: 'Communication', mass: 2, cssClass: 'attr'};
edges['xpcommunication'] = { nodeA: 'xp', nodeB: 'communication', weight: 75}
nodes['simplicity'] = { label: 'Simplicity', mass: 2, cssClass: 'attr'};
edges['xpsimplicity'] = { nodeA: 'xp', nodeB: 'simplicity', weight: 75}
nodes['feedback'] = { label: 'Feedback', mass: 2, cssClass: 'attr'};
edges['xpfeedback'] = { nodeA: 'xp', nodeB: 'feedback', weight: 75}
nodes['deliver_early'] = { label: 'Deliver Early', mass: 2, cssClass: 'attr'};
edges['xpdeliver_early'] = { nodeA: 'xp', nodeB: 'deliver_early', weight: 75}
nodes['feedback'] = { label: 'Feedback', mass: 2, cssClass: 'attr'};
edges['leanfeedback'] = { nodeA: 'lean', nodeB: 'feedback', weight: 40}
nodes['courage'] = { label: 'Courage', mass: 2, cssClass: 'attr'};
edges['scrumcourage'] = { nodeA: 'scrum', nodeB: 'courage', weight: 55}
nodes['eliminate_waste'] = { label: 'Eliminate waste', mass: 2, cssClass: 'attr'};
edges['leaneliminate_waste'] = { nodeA: 'lean', nodeB: 'eliminate_waste', weight: 35}
nodes['decide_as_late_as_possible'] = { label: 'Decide as late as possible', mass: 2, cssClass: 'attr'};
edges['leandecide_as_late_as_possible'] = { nodeA: 'lean', nodeB: 'decide_as_late_as_possible', weight: 45}
nodes['build_integrity_in'] = { label: 'Build integrity in', mass: 2, cssClass: 'attr'};
edges['leanbuild_integrity_in'] = { nodeA: 'lean', nodeB: 'build_integrity_in', weight: 60}
nodes['commitment'] = { label: 'Commitment', mass: 2, cssClass: 'attr'};
edges['scrumcommitment'] = { nodeA: 'scrum', nodeB: 'commitment', weight: 35}
nodes['focus'] = { label: 'Focus', mass: 2, cssClass: 'attr'};
edges['scrumfocus'] = { nodeA: 'scrum', nodeB: 'focus', weight: 40}
nodes['openness'] = { label: 'Openness', mass: 2, cssClass: 'attr'};
edges['scrumopenness'] = { nodeA: 'scrum', nodeB: 'openness', weight: 45}
nodes['respect'] = { label: 'Respect', mass: 2, cssClass: 'attr'};
edges['scrumrespect'] = { nodeA: 'scrum', nodeB: 'respect', weight: 50}
nodes['smarter_better_faster'] = { label: 'Smarter, better, faster', mass: 2, cssClass: 'attr'};
edges['getting_realsmarter_better_faster'] = { nodeA: 'getting_real', nodeB: 'smarter_better_faster', weight: 35}
nodes['working_software'] = { label: 'Working Software', mass: 2, cssClass: 'attr'};
edges['getting_realworking_software'] = { nodeA: 'getting_real', nodeB: 'working_software', weight: 40}
nodes['simplicity'] = { label: 'Simplicity', mass: 2, cssClass: 'attr'};
edges['getting_realsimplicity'] = { nodeA: 'getting_real', nodeB: 'simplicity', weight: 45}
nodes['staying_small'] = { label: 'Staying Small', mass: 2, cssClass: 'attr'};
edges['getting_realstaying_small'] = { nodeA: 'getting_real', nodeB: 'staying_small', weight: 50}
nodes['respond_to_change'] = { label: 'Respond to Change', mass: 2, cssClass: 'attr'};
edges['getting_realrespond_to_change'] = { nodeA: 'getting_real', nodeB: 'respond_to_change', weight: 55}
nodes['iteration_sprint'] = { label: 'Iteration/Sprint', mass: 2, cssClass: 'attr'};
edges['getting_realiteration_sprint'] = { nodeA: 'getting_real', nodeB: 'iteration_sprint', weight: 60}
nodes['lowering_cost_of_change'] = { label: 'Lowering Cost of Change', mass: 2, cssClass: 'attr'};
edges['getting_reallowering_cost_of_change'] = { nodeA: 'getting_real', nodeB: 'lowering_cost_of_change', weight: 65}
nodes['deliver_early'] = { label: 'Deliver Early', mass: 2, cssClass: 'attr'};
edges['getting_realdeliver_early'] = { nodeA: 'getting_real', nodeB: 'deliver_early', weight: 70}
nodes['tweaking'] = { label: 'Tweaking', mass: 2, cssClass: 'attr'};
edges['getting_realtweaking'] = { nodeA: 'getting_real', nodeB: 'tweaking', weight: 75}
